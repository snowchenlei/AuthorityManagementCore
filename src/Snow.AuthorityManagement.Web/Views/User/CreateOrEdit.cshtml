@model Snow.AuthorityManagement.Core.Dto.User.GetUserForEditOutput
@*<div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @if (Model.User == null || Model.User.ID.HasValue)
        {
            <h4 class="modal-title" id="modelTitle">添加用户</h4>
        }
        else
        {
            <h4 class="modal-title" id="modelTitle">修改用户: @Model.User.Name</h4>
        }
    </div>*@
<form action="/User/CreateOrEdit" id="modelForm" method="post" enctype="multipart/form-data"
      data-ajax="true" data-ajax-success="saveSuccess" data-ajax-failure="saveFailure">
    @Html.AntiForgeryToken()

    <div class="modal-body form-horizontal" id="modify">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.ID, new { @data_bind = "value:ID" })

        <div class="form-group">
            @Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control", @data_bind = "value:Name", @placeholder = @Html.DisplayNameFor(model => model.User.Name) } })
                @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control", @data_bind = "value:UserName", @placeholder = @Html.DisplayNameFor(model => model.User.UserName) } })
                @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @data_bind = "value:PhoneNumber", @placeholder = @Html.DisplayNameFor(model => model.User.PhoneNumber) } })
                @Html.ValidationMessageFor(model => model.User.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.CanUse, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(model => model.CanUse, htmlAttributes: new { @data_bind = "checked:CanUse" })
                            @Html.ValidationMessageFor(model => model.CanUse, "", new { @class = "text-danger" })
                        </label>
                    </div>
                </div>
            </div>*@
    </div>
    @*<div class="modal-footer">
            <button type="button" id="close_edit" class="btn btn-primary" data-dismiss="modal">关闭</button>
            <button type="submit" class="btn btn-success">保存</button>
            <input type="hidden" id="page" name="page" />
        </div>*@
</form>

<script type="text/javascript">
    $.validator.unobtrusive.parse('form');
</script>