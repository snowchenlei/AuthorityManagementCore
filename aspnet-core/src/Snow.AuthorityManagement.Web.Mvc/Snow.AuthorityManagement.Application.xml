<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Snow.AuthorityManagement.Application</name>
    </assembly>
    <members>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Logs.Dto.GetLogsInput">
            <summary>
            获取列表参数
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Logs.Dto.GetLogsInput.LogLevel">
            <summary>
            日志等级
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Logs.Dto.GetLogsInput.Date">
            <summary>
            创建时间段
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.Dto.GetLogsInput.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Logs.Dto.LogListDto">
            <summary>
            输出列表
            </summary>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Logs.ILogAppService">
            <summary>
            审计日志
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.ILogAppService.GetLogPagedAsync(Snow.AuthorityManagement.Application.Authorization.Logs.Dto.GetLogsInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.ILogAppService.GetCountPieAsync">
            <summary>
            获取统计饼状图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.ILogAppService.DeleteLogAsync(System.Int64)">
            <summary>
            删除日志
            </summary>
            <param name="id">编号</param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Logs.LogAppService">
            <summary>
            审计日志
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.LogAppService.#ctor(AutoMapper.IMapper,Snow.AuthorityManagement.Core.Authorization.Logs.ILogRepository)">
            <summary>
            构造
            </summary>
            <param name="mapper"></param>
            <param name="logRepository"></param>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.LogAppService.GetLogPagedAsync(Snow.AuthorityManagement.Application.Authorization.Logs.Dto.GetLogsInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.LogAppService.GetCountPieAsync">
            <summary>
            获取统计饼状图
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Logs.LogAppService.DeleteLogAsync(System.Int64)">
            <summary>
            删除日志
            </summary>
            <param name="id">编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.Dto.GetMenusInput.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Menus.Dto.GetMenusInput.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService">
            <summary>
            菜单应用服务
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.GetAllMenuListAsync">
            <summary>
            获取所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.GetPagedMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.GetMenusInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.GetMenuForEditAsync(System.Int32)">
            <summary>
            根据Id获取数据
            </summary>
            <param name="menuId">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.CreateOrEditMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.CreateOrUpdateMenu)">
            <summary>
            添加修改菜单
            </summary>
            <param name="input">信息</param>
            <returns>用户列表数据</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.CreateMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.MenuEditDto)">
            <summary>
            添加数据
            </summary>
            <param name="input">数据信息</param>
            <param name="roleIds">角色Id</param>
            <returns>用户信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.EditMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.MenuEditDto)">
            <summary>
            修改数据
            </summary>
            <param name="input">数据信息</param>
            <param name="roleIds">角色Id</param>
            <returns>用户信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.IMenuAppService.DeleteMenuAsync(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="menuId">编号</param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService">
            <summary>
            菜单
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.#ctor(AutoMapper.IMapper,Snow.AuthorityManagement.Core.Authorization.Menus.IMenuRepository,Snow.AuthorityManagement.EntityFrameworkCore.AuthorityManagementContext)">
            <summary>
            构造
            </summary>
            <param name="mapper"></param>
            <param name="menuRepository"></param>
            <param name="context"></param>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.GetAllMenuListAsync">
            <summary>
            菜单应用服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.GetPagedMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.GetMenusInput)">
            <summary>
            分页
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.GetMenuForEditAsync(System.Int32)">
            <summary>
            根据Id获取
            </summary>
            <param name="menuId"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.CreateOrEditMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.CreateOrUpdateMenu)">
            <summary>
            添加修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.CreateMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.MenuEditDto)">
            <summary>
            添加
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.EditMenuAsync(Snow.AuthorityManagement.Application.Authorization.Menus.Dto.MenuEditDto)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.MenuAppService.DeleteMenuAsync(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="menuId"></param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Menus.Validators.MenuEditValidator">
            <summary>
            MenuEditDto验证
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Menus.Validators.MenuEditValidator.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Permissions.IPermissionAppService">
            <summary>
            权限应用服务
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Permissions.IPermissionAppService.GetUserPermissionsAsync(System.Int32)">
            <summary>
            获取用户所有权限
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Permissions.PermissionAppService">
            <summary>
            权限服务
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Permissions.PermissionAppService.GetUserPermissionsAsync(System.Int32)">
            <summary>
            获取用户所有权限
            </summary>
            <param name="userId">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Permissions.PermissionAppService.GetRoleNamesByUserAsync(System.Int32)">
            <summary>
            获取用户角色名
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.Dto.GetRolesInput.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService">
            <summary>
            角色服务接口
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.GetAllRoleListAsync">
            <summary>
            获取所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.GetPagedAsync(Snow.AuthorityManagement.Application.Authorization.Roles.Dto.GetRolesInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.GetForEditAsync(System.Int32)">
            <summary>
            根据Id获取数据
            </summary>
            <param name="roleId">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.GetPermissionsAsync(System.String)">
            <summary>
            获取权限
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.CreateAsync(Snow.AuthorityManagement.Application.Authorization.Roles.Dto.RoleEditDto,System.Collections.Generic.List{System.String})">
            <summary>
            添加
            </summary>
            <param name="input">信息</param>
            <param name="permission">权限</param>
            <returns>信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.EditAsync(Snow.AuthorityManagement.Application.Authorization.Roles.Dto.RoleEditDto,System.Collections.Generic.List{System.String})">
            <summary>
            修改
            </summary>
            <param name="input">信息</param>
            <param name="permission">权限</param>
            <returns>信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.IRoleAppService.DeleteAsync(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id">编号</param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService">
            <summary>
            角色服务
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.#ctor(AutoMapper.IMapper,Anc.Authorization.Permissions.IPermissionStore,Snow.AuthorityManagement.EntityFrameworkCore.AuthorityManagementContext,Anc.Domain.Repositories.ILambdaRepository{Snow.AuthorityManagement.Core.Authorization.Roles.Role},Snow.AuthorityManagement.Core.Authorization.Permissions.IPermissionRepository,Anc.Authorization.Permissions.IPermissionDefinitionManager)">
            <summary>
            构造
            </summary>
            <param name="mapper"></param>
            <param name="context"></param>
            <param name="roleRepository"></param>
            <param name="permissionRepository"></param>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.GetAllRoleListAsync">
            <summary>
            获取所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.GetPagedAsync(Snow.AuthorityManagement.Application.Authorization.Roles.Dto.GetRolesInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.GetForEditAsync(System.Int32)">
            <summary>
            根据Id获取数据
            </summary>
            <param name="roleId">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.GetPermissionsAsync(System.String)">
            <summary>
            获取权限
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.GetForEditAsync(System.Nullable{System.Int32})">
            <summary>
            根据Id获取数据
            </summary>
            <param name="roleId">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.CreateAsync(Snow.AuthorityManagement.Application.Authorization.Roles.Dto.RoleEditDto,System.Collections.Generic.List{System.String})">
            <summary>
            添加
            </summary>
            <param name="input">信息</param>
            <param name="permissionNames">权限</param>
            <returns>信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.EditAsync(Snow.AuthorityManagement.Application.Authorization.Roles.Dto.RoleEditDto,System.Collections.Generic.List{System.String})">
            <summary>
            修改
            </summary>
            <param name="input">信息</param>
            <param name="permissionNames">权限</param>
            <returns>信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.CreatePermissions(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            构建权限实体
            </summary>
            <param name="providerKey">提供者标识</param>
            <param name="permissionNames">权限名集合</param>
            <returns>数据库实体集合</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Roles.RoleAppService.DeleteAsync(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id">编号</param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Users.Dto.GetUsersInput">
            <summary>
            用户查询参数
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.Dto.GetUsersInput.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.GetUsersInput.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.GetUsersInput.Date">
            <summary>
            创建时间段
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto.LastModificationTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserListDto.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserListDto.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.GetUserPagedAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.GetUsersInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.GetUserForEditAsync(System.Int32)">
            <summary>
            根据Id获取数据
            </summary>
            <param name="userId">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.GetUserRoleSelectAsync(System.Nullable{System.Int32})">
            <summary>
            获取角色列表
            </summary>
            <param name="userId">用户Id</param>
            <returns>角色列表</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.GetUserInfoForEditAsync(System.Nullable{System.Int32})">
            <summary>
            根据Id获取数据
            </summary>
            <param name="userId">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.LoginAsync(System.String,System.String)">
            <summary>
            登陆
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.CreateOrEditUserAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.CreateOrUpdateUser)">
            <summary>
            添加修改用户
            </summary>
            <param name="input">信息</param>
            <returns>用户列表数据</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.CreateUserAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto,System.Collections.Generic.List{System.Int32})">
            <summary>
            添加用户
            </summary>
            <param name="input">用户信息</param>
            <param name="roleIds">角色Id</param>
            <returns>用户信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.EditUserAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto,System.Collections.Generic.List{System.Int32})">
            <summary>
            修改用户
            </summary>
            <param name="input">用户信息</param>
            <param name="roleIds">角色Id</param>
            <returns>用户信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.IUserAppService.DeleteUserAsync(System.Int32)">
            <summary>
            删除用户
            </summary>
            <param name="id">编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.GetUserPagedAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.GetUsersInput)">
            <summary>
            分页
            </summary>
            <param name="input">过滤条件</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.GetUserForEditAsync(System.Int32)">
            <summary>
            根据Id获取数据
            </summary>
            <param name="userId">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.GetUserRoleSelectAsync(System.Nullable{System.Int32})">
            <summary>
            获取角色列表
            </summary>
            <param name="userId">用户Id</param>
            <returns>角色列表</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.GetUserInfoForEditAsync(System.Nullable{System.Int32})">
            <summary>
            根据Id获取数据
            </summary>
            <param name="userId">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.LoginAsync(System.String,System.String)">
            <summary>
            登陆
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.CreateOrEditUserAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.CreateOrUpdateUser)">
            <summary>
            添加修改用户
            </summary>
            <param name="input">信息</param>
            <returns>用户列表数据</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.CreateUserAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto,System.Collections.Generic.List{System.Int32})">
            <summary>
            添加
            </summary>
            <param name="input">信息</param>
            <param name="roleIds">角色Id</param>
            <returns>信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.EditUserAsync(Snow.AuthorityManagement.Application.Authorization.Users.Dto.UserEditDto,System.Collections.Generic.List{System.Int32})">
            <summary>
            修改用户
            </summary>
            <param name="input">用户信息</param>
            <param name="roleIds">角色Id</param>
            <returns>用户信息</returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.SetUserRoleAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            设置用户角色
            </summary>
            <param name="userID">用户ID</param>
            <param name="roleIds">角色ID集合</param>
            <returns></returns>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.UserAppService.DeleteUserAsync(System.Int32)">
            <summary>
            删除用户
            </summary>
            <param name="id">编号</param>
            <returns></returns>
        </member>
        <member name="T:Snow.AuthorityManagement.Application.Authorization.Users.Validators.UserEditValidator">
            <summary>
            UserEditDto验证
            </summary>
        </member>
        <member name="M:Snow.AuthorityManagement.Application.Authorization.Users.Validators.UserEditValidator.#ctor">
            <summary>
            构造
            </summary>
        </member>
    </members>
</doc>
