@model Snow.AuthorityManagement.Core.Dto.User.GetUserForEditOutput
<form asp-controller="User" asp-action="CreateOrEdit" id="modelForm" method="post" enctype="multipart/form-data"
      data-ajax="true" data-ajax-success="saveSuccess" data-ajax-failure="saveFailure">
    @Html.AntiForgeryToken()

    <div class="modal-body form-horizontal" id="modify">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.ID, new { @data_bind = "value:ID" })

        <div class="form-group">
            <label asp-for="User.Name" class="control-label col-md-2"></label>
            @*@Html.LabelFor(model => model.User.Name, htmlAttributes: new {@class = "control-label col-md-2"})*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control", @data_bind = "value:Name", @placeholder = @Html.DisplayNameFor(model => model.User.Name) } })
                @Html.ValidationMessageFor(model => model.User.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control", @data_bind = "value:UserName", @placeholder = @Html.DisplayNameFor(model => model.User.UserName) } })
                @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @data_bind = "value:PhoneNumber", @placeholder = @Html.DisplayNameFor(model => model.User.PhoneNumber) } })
                @Html.ValidationMessageFor(model => model.User.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</form>

<script type="text/javascript">
    $.validator.unobtrusive.parse('form');
</script>